table <- read.table("humann3_pathabundance_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1)
metadata <- read.table("../metadata.txt",
sep = "\t",
header = TRUE,
row.names = 1)
# Input table
table <- read.table("humann3_pathabundance_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
knitr::opts_chunk$set(echo = TRUE)
# Libraries required
library("colorRamps")
library("ggplot2")
library("reshape")
library("scales")
library("jcolors")
library("grid")
library("RColorBrewer")
library("dplyr")
library("ggpubr")
library("phyloseq")
library("microbiome")
library("vegan")
library("metagMisc")
library("DiagrammeR")
library("microbiomeMarker")
library("DESeq2")
library("apeglm")
install.packages("apeglm")
BiocManager::install("apeglm")
library("apeglm")
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
metadata <- read.table("../metadata.txt",
sep = "\t",
header = TRUE)
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
metadata <- read.table("../metadata.txt",
sep = "\t",
header = TRUE)
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
metadata <- read.table("../metadata.txt",
header = TRUE)
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
metadata <- read.csv("../metadata.txt",
sep = "\t",
header = TRUE)
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
metadata <- read.csv("../metadata.txt",
sep = "\t")
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
metadata <- read.csv("metadata.txt",
sep = "\t")
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
View(metadata)
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
# Input table
table <- read.table("humann3_pathabundance_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata.txt",
sep = "\t")
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
# Input table
table <- read.table("humann3_pathabundance_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata.txt",
sep = "\t")
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~group)
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~group)
View(metadata)
deseq_data_set$group <- relevel(deseq_data_set$group,
ref = "Control")
dif_expression_deseq_data_set <- DESeq(deseq_data_set)
dif_expression_deseq_data_set <- DESeq(deseq_data_set,
fitType='local')
res_dif_expression_deseq_data_set <- results(dif_expression_deseq_data_set)
View(res_dif_expression_deseq_data_set)
summary_dif_expression_deseq_data_set <- summary(res_dif_expression_deseq_data_set)
summary_dif_expression_deseq_data_set
cat(summary_dif_expression_deseq_data_set)
head(summary_dif_expression_deseq_data_set)
res05_dif_expression_deseq_data_set <- results(dif_expression_deseq_data_set,
alpha=0.05)
View(res05_dif_expression_deseq_data_set)
View(res_dif_expression_deseq_data_set)
summary_dif_expression_deseq_data_set <- summary(res05_dif_expression_deseq_data_set)
dif_expression_deseq_data_set <- results(dif_expression_deseq_data_set,
alpha=0.05)
summary_dif_expression_deseq_data_set <- summary(dif_expression_deseq_data_set)
write.table(as.data.frame(res05_dif_expression_deseq_data_set),sep = '\t' ,
file="results.tsv")
write.table(as.data.frame(res05_dif_expression_deseq_data_set),sep = '\t' ,
file="results.tsv")
write.table(as.data.frame(dif_expression_deseq_data_set),
sep = '\t' ,
file="results.tsv")
plotMA(dif_expression_deseq_data_set,
ylim=c(-10,10))
# Input table
table <- read.table("humann3_genefamilies_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~group)
deseq_data_set$group <- relevel(deseq_data_set$group,
ref = "Control")
# Differential expression analysis, alpha = 0.05
dif_expression_deseq_data_set <- DESeq(deseq_data_set,
fitType = 'local')
# Differential expression analysis, alpha = 0.05
dif_expression_deseq_data_set <- DESeq(deseq_data_set)
# Differential expression analysis, alpha = 0.05
dif_expression_deseq_data_set <- DESeq(deseq_data_set)
res_dif_expression_deseq_data_set <- results(dif_expression_deseq_data_set,
alpha = 0.05)
res_dif_expression_deseq_data_set
summary_dif_expression_deseq_data_set <- summary(dif_expression_deseq_data_set)
summary_dif_expression_deseq_data_set
write.table(as.data.frame(dif_expression_deseq_data_set),
sep = '\t' ,
file="results.tsv")
plotMA(dif_expression_deseq_data_set,
ylim=c(-10,10))
write.table(as.data.frame(dif_expression_deseq_data_set),
sep = '\t' ,
file="results.tsv")
# Differential expression analysis, alpha = 0.05
dif_expression_deseq_data_set <- DESeq(deseq_data_set)
write.table(as.data.frame(res_dif_expression_deseq_data_set),
sep = '\t' ,
file="results.tsv")
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-10,10))
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-100,100))
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-50,50))
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-20,20))
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-10,10))
plotMA(res_dif_expression_deseq_data_set)
ylim=c(-10,10)
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-10,10))
View(dif_expression_deseq_data_set)
View(res_dif_expression_deseq_data_set)
View(dif_expression_deseq_data_set)
View(res_dif_expression_deseq_data_set)
View(dif_expression_deseq_data_set)
# Heatmap
pheatmap(assay(res_dif_expression_deseq_data_set)[select,],
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE,
annotation_col=df)
library("pheatmap")
install.packages("pheatmap")
library("pheatmap")
# Heatmap
pheatmap(assay(res_dif_expression_deseq_data_set)[select,],
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE,
annotation_col=df)
# Heatmap
pheatmap(res_dif_expression_deseq_data_set),
# Heatmap
pheatmap(res_dif_expression_deseq_data_set,
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE,
annotation_col=df)
# Heatmap
pheatmap(res_dif_expression_deseq_data_set,
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE)
# Heatmap
pheatmap(dif_expression_deseq_data_set,
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE)
# Heatmap
pheatmap(dif_expression_deseq_data_set,
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE)
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,normalized=TRUE)),
decreasing=TRUE)[1:20]
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("X","group")])
pheatmap(dif_expression_deseq_data_set,
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE)
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows=FALSE,
show_rownames=FALSE,
cluster_cols=FALSE,
annotation_col=df)
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = TRUE,
cluster_cols = TRUE,
annotation_col=df)
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = TRUE,
cluster_cols = TRUE,
annotation_col=df)
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = FALSE,
show_rownames = TRUE,
cluster_cols = TRUE,
annotation_col=df)
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
# PCA
vsd <- vst(dif_expression_deseq_data_set, blind=FALSE)
plotPCA(vsd,
intgroup=c("group"))
knitr::opts_chunk$set(echo = TRUE)
# Libraries required
library("colorRamps")
library("ggplot2")
library("reshape")
library("scales")
library("jcolors")
library("grid")
library("RColorBrewer")
library("dplyr")
library("ggpubr")
library("phyloseq")
library("microbiome")
library("vegan")
library("metagMisc")
library("DiagrammeR")
library("microbiomeMarker")
library("DESeq2")
library("apeglm")
library("ggplot2")
library("pheatmap")
# Input table
table <- read.table("humann3_genefamilies_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~group)
metadata <- read.csv("metadata.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~group)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata$Status_1,
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = df(metadata),
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
View(table)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~Status_1)
# Input table
table <- read.table("humann3_genefamilies_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
# Input table
table <- read.table("humann3_genefamilies_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~Status_1)
metadata <- read.csv("metadata_filt.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = table,
colData = metadata,
design = ~Status_1)
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
deseq_data_set$group <- relevel(deseq_data_set$group,
ref = "Control")
# Differential expression analysis, alpha = 0.05
dif_expression_deseq_data_set <- DESeq(deseq_data_set)
res_dif_expression_deseq_data_set <- results(dif_expression_deseq_data_set,
alpha = 0.05)
summary_dif_expression_deseq_data_set <- summary(dif_expression_deseq_data_set)
summary_dif_expression_deseq_data_set
res_dif_expression_deseq_data_set
# Output table
write.table(as.data.frame(res_dif_expression_deseq_data_set),
sep = '\t' ,
file="deseq2_allsamples_Status_1.tsv")
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-10,10))
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-100,100))
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-20,20))
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-25,25))
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,normalized=TRUE)),
decreasing=TRUE)[1:20]
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("X","group")])
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("X","Status_1")])
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("Sex","Status_1")])
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,normalized=TRUE)),
decreasing=TRUE)[1:100]
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = FALSE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,normalized=TRUE)),
decreasing=TRUE)
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("Sex","Status_1")])
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,normalized=TRUE)),
decreasing=TRUE)[1:1000]
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,normalized=TRUE)),
decreasing=TRUE)[1:1000]
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("Sex","Status_1")])
df <- as.data.frame(colData(dif_expression_deseq_data_set)[,c("Sex","Status_1")])
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
res_dif_expression_deseq_data_set
dif_expression_deseq_data_set
pheatmap(assay(res_dif_expression_deseq_data_set),
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
pheatmap(assay(dif_expression_deseq_data_set)[res_dif_expression_deseq_data_set,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
# Heatmap diferentially expressed
sigGenes <- rownames(res_dif_expression_deseq_data_set[res_dif_expression_deseq_data_set$padj <= .05 & abs(res_dif_expression_deseq_data_set$log2FoldChange) > 3,])
# Heatmap
select <- order(rowMeans(counts(res_dif_expression_deseq_data_set,
normalized=TRUE)),
decreasing=TRUE)[1:1000]
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set$Status_1,
normalized=TRUE)),
decreasing=TRUE)[1:1000]
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,
normalized=TRUE)),
decreasing=TRUE)[1:1000]
# Heatmap
select <- order(rowMeans(counts(dif_expression_deseq_data_set,
normalized=TRUE)),
decreasing=TRUE)[1:10000]
pheatmap(assay(dif_expression_deseq_data_set)[select,],
cluster_rows = TRUE,
show_rownames = FALSE,
cluster_cols = TRUE,
annotation_col=df)
# Input table
table <- read.table("./humann3_pathabundance_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata_filt.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
# Input table
table <- read.table("./humann3_pathabundance_cpm_unstratified_r.tsv",
sep = "\t",
header = TRUE,
row.names = 1,
check.names = F)
metadata <- read.csv("metadata_filt.txt",
sep = "\t")
# DESeq2
deseq_data_set <- DESeqDataSetFromMatrix(countData = round(table),
colData = metadata,
design = ~Status_1)
deseq_data_set$group <- relevel(deseq_data_set$group,
ref = "Control")
deseq_data_set$Status_1 <- relevel(deseq_data_set$Status_1,
ref = "Control")
# Differential expression analysis, alpha = 0.05
dif_expression_deseq_data_set <- DESeq(deseq_data_set)
res_dif_expression_deseq_data_set <- results(dif_expression_deseq_data_set,
alpha = 0.05)
summary_dif_expression_deseq_data_set <- summary(dif_expression_deseq_data_set)
# Output table
write.table(as.data.frame(res_dif_expression_deseq_data_set),
sep = '\t' ,
file="deseq2_allsamples_Status_1.tsv")
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-25,25))
# Volcano Plot
plotMA(res_dif_expression_deseq_data_set,
ylim=c(-10,10))
